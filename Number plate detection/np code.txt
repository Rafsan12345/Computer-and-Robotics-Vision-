import cv2
# Load the image and convert it to grayscale
image = cv2.imread('np.jpg')
imgCopy = image.copy()
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
blurred_image = cv2.GaussianBlur(gray, (5,5), 1)
# Use Canny edge detection to find the edges in the image
edges = cv2.Canny(blurred_image, 100, 200)

# Find the contours in the image
contours, hierarchy = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)

# Find the contour with the desired shape or size
for cnt in contours:
    # Check if the contour has a particular size
    area = cv2.contourArea(cnt)
    if area > 500:
        #print(area)
        cv2.drawContours(image, [cnt], -1, (0,0,255), 3)
        perimeter = cv2.arcLength(cnt, True)
        #print(perimeter)
        approx = cv2.approxPolyDP(cnt,0.02*perimeter,True)
        corner = len(approx)
        x, y, w, h = cv2.boundingRect(approx)
        if corner == 4:
            print(len(contours))
            cropped_image = imgCopy[y:y+h, x:x+w]
            cv2.rectangle(image, (x, y), (x + w, y + h), (0, 0, 255), 2)

        else:
            pass

cv2.imshow('Contours',image)
cv2.imshow('Contours',cropped_image)
cv2.waitKey(0)
cv2.destroyAllWindows()
